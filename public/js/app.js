// Generated by CoffeeScript 1.10.0
(function() {
  var Confirm, FuelEntryForm,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  FuelEntryForm = (function() {
    function FuelEntryForm() {
      this._handleInput = bind(this._handleInput, this);
      var $previousOdometer;
      this.odometerInput = $('#fuel-entry-odometer');
      if (!this.odometerInput.length) {
        return;
      }
      $previousOdometer = $('#previous-fuel-entry-odometer');
      if (!$previousOdometer.length) {
        return;
      }
      this.previousOdometer = $previousOdometer.data('value');
      this.tripWrapper = $('#fuel-entry-trip');
      this.tripSpan = this.tripWrapper.find('span');
      this.odometerInput.on('input', this._handleInput);
    }

    FuelEntryForm.prototype._handleInput = function() {
      var odometer, trip;
      odometer = this.odometerInput.val();
      trip = odometer - this.previousOdometer;
      if (trip < 0) {
        return this.tripWrapper.addClass('d-none');
      } else {
        this.tripSpan.text(trip);
        return this.tripWrapper.removeClass('d-none');
      }
    };

    return FuelEntryForm;

  })();

  Confirm = (function() {
    function Confirm() {
      this._handleClick = bind(this._handleClick, this);
      var $items;
      $items = $('[data-confirm]');
      $items.on('click', this._handleClick);
    }

    Confirm.prototype._handleClick = function(e) {
      var $item, message;
      $item = $(e.currentTarget);
      message = $item.data('confirm');
      if (message && !confirm(message)) {
        return e.preventDefault();
      }
    };

    return Confirm;

  })();

  $(function() {
    new FuelEntryForm;
    return new Confirm;
  });

}).call(this);
